# RiverWare_Ruleset 9.3.5 Patch
# Created 22:22 April 17, 2025
# 
RULESET
NAME "RPL Set 1";
AGENDA_ORDER ASCENDING;
DESCRIPTION "";
PRECISION   3;
NOTES "";
BEGIN

  POLICY_GROUP   "Keno rule set";
  DESCRIPTION    "";
  ACTIVE         TRUE;
  NOTES          "";
  BEGIN

    RULE                 "Keno Rampdown Rates";
    DESCRIPTION          "";
    ACTIVE               TRUE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "";
    BEGIN

      IF_STATEMENT ($ "Keno.Outflow" [] < $ "Keno.Outflow" [@"t - 1"] AND $ "Keno.Outflow" [] > 1400.00000000 "cfs") THEN
            $ "Keno.Outflow" [] := "Max"( $ "Keno.Outflow" [], $ "Keno.Outflow" [] - $ "Keno.Ramp Down Rate" [] );

      END_IF_STATEMENT;

    END
    UUID "{647612aa-2620-4d6c-873c-a5c6310f1b33}";;

    RULE                 "Keno Elevation";
    DESCRIPTION          "";
    ACTIVE               TRUE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "";
    BEGIN

      $ "Keno.Pool Elevation" [] := 4085.50000000 "feet";

    END
    UUID "{94d502f7-6598-4a14-b25d-455793bb97b1}";;

    RULE                 "Keno Releases";
    DESCRIPTION          "";
    ACTIVE               TRUE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "";
    BEGIN

      % "Keno" & "Outflow" [] := "Max"( $ "Keno.Baseflow" [], $ "Keno.Baseflow" [] + ( $ "Keno.Baseflow" [] * "KenoReleaseMultiplier"(  ) - ( "FFA increment"(  ) + $ "Klamath River.FFA Release schedule" [] ) ) );

    END
    UUID "{7687a0d1-3d30-4dcb-8984-f8066b257dcd}";;

    RULE                 "Keno Debug_temp rule";
    DESCRIPTION          "";
    ACTIVE               FALSE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "";
    BEGIN

      $ "Keno.Debug" [] := ? * ? - ?;

    END
    UUID "{f2f4ebcd-89c2-4529-9390-72cb08533a6e}";;

  END
  UUID "{269a99e1-687b-489f-9675-082d0c135965}";;

  POLICY_GROUP   "Upper Klamath ruleset";
  DESCRIPTION    "";
  ACTIVE         TRUE;
  NOTES          "";
  BEGIN

    RULE                 "FFA Downstream Distribution";
    DESCRIPTION          "";
    ACTIVE               TRUE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "Sets releases for FFA distribution. <br>Currently, the model is set to distribute an equal amount every day, thus &quot;FFA flat distribution&quot;. Additional distribution patterns are possible, they just need to be entered into the Keno data object.<br><br>FFA increment is divided by 121 days to create an equal distribution of all flows, then multiplied across the flat distribution pattern.<br>Other distribution patterns will require more development";
    BEGIN

      IF_STATEMENT (@"t" > @"March 1" AND @"t" <= @"June 30") THEN
            $ "Klamath River.FFA Release schedule" [] := "VolumeToFlow"( $ "River Data.FFA Increment" [@"24:00:00 March 1, Current Year"] / 121.00000000 * $ "River Data.FFA Flat Distribution" [], @"t" );

      ELSE
            $ "Klamath River.FFA Release schedule" [] := 0.00000000 "cfs";

      END_IF_STATEMENT;

    END
    UUID "{0df1aa33-b14f-48b0-b9ff-a5fc30e84c7c}";;

    RULE                 "FFA storage and release";
    DESCRIPTION          "";
    ACTIVE               TRUE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "Code has broken FFA accumulation ruleset into two separate lines of code because the year change between october and March 2 breaks the code<br><br>FFA releases are scheduled ";
    BEGIN

      IF_STATEMENT (@"t" >= @"October 1" AND @"t" <= @"December 31") THEN
            $ "River Data.FFA Increment" [] := $ "River Data.FFA Increment" [@"t - 1"] + "FlowToVolume"( "FFA increment"(  ), @"t" );

      ELSE
            $ "River Data.FFA Increment" [] := 0.05000000 "1000 acre-feet";

      END_IF_STATEMENT
      ELSEIF_COND ( @"t" >= @"January 1" AND @"t" <= @"March 2" )
      ELSEIF_CLAUSE
            $ "River Data.FFA Increment" [] := $ "River Data.FFA Increment" [@"t - 1"] + "FlowToVolume"( "FFA increment"(  ), @"t" );
      END_ELSEIF
      ELSEIF_COND ( @"t" >= @"March 2" AND @"t" <= @"June 30" )
      ELSEIF_CLAUSE
            $ "River Data.FFA Increment" [] := "Max"( $ "River Data.FFA Increment" [@"t - 1"] - "FlowToVolume"( $ "Klamath River.FFA Release schedule" [], @"t - 1" ), 0.00000000 "acre-ft" );
      END_ELSEIF;

    END
    UUID "{000082ca-73d4-4f66-b2fa-6f4313e22f64}";;

    RULE                 "FFA Savings";
    DESCRIPTION          "";
    ACTIVE               TRUE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "set FFA savings to lot in UKL (acre-ft), using flowtovolume function<br>";
    BEGIN

    END
    UUID "{37ddb05e-594c-44ee-99c1-e3ab22384962}";;

    RULE                 "A canal Diversion";
    DESCRIPTION          "";
    ACTIVE               TRUE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "test Rule set to enable diversions out of A canal. Sets diversion available to max CFS in slot in UKL ";
    BEGIN

      $ "Upper Klamath Lake.A canal Request" [] := $ "Diversion Data.A canal Diversion availability" [];

    END
    UUID "{1baba8dc-287a-49bc-b40a-3c60a60ef7ad}";;

  END
  UUID "{6c778d15-cdde-424f-be6e-401a62842ad7}";;

  POLICY_GROUP   "Policy Group";
  DESCRIPTION    "";
  ACTIVE         TRUE;
  NOTES          "";
  BEGIN

    RULE                 "Lake Index";
    DESCRIPTION          "Records the lake index value at a slot within the Upper Klamath Lake Object<br>Formula current (and incorrectly) uses actual lake elevation. Need in incorporate shadow levels once DPS and FFA account is in place.";
    ACTIVE               TRUE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "formula taken from appendex E, pg 19.  Lake index formula is utilizes lake elevation from previous day due to issues dispatching the model. This may result in minor changes, but the values. <br><br>Future Work: ensure formula and model work on @&quot;t&quot; instead of @&quot;t-1&quot;.<br><br><br><br>";
    BEGIN

      $ "Upper Klamath Lake.Lake Index" [] := "Min"( 1.00000000, "Max"( 0.00000000, ( $ "Upper Klamath Lake.Pool Elevation" [@"t - 1"] - $ "Upper Klamath Lake.UKL lower bound" [@"t - 1"] ) / ( $ "Upper Klamath Lake.UKL upper bound" [@"t - 1"] - $ "Upper Klamath Lake.UKL lower bound" [@"t - 1"] ) ) );

    END
    UUID "{d7389eb3-ce20-4d48-a25b-9416e8ca9c27}";;

    RULE                 "Ops Index";
    DESCRIPTION          "";
    ACTIVE               TRUE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "";
    BEGIN

      $ "OpsData.OpsIndex" [] := ( $ "OpsData.NWI_14dayAvg" [] + $ "Upper Klamath Lake.Lake Index" [] ) / 2.00000000;

    END
    UUID "{df05be47-960a-4135-85b3-58fed1a2d9c2}";;

    RULE                 "14 day NWI average";
    DESCRIPTION          "";
    ACTIVE               TRUE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "";
    BEGIN

      $ "OpsData.NWI_14dayAvg" [] := "SumSlot"( $ "OpsData.NWI", @"t - 13", @"t" ) / 14.00000000;

    END
    UUID "{9053ba48-5438-47e9-8a78-41a5b32a6706}";;

  END
  UUID "{1daebf9f-5b68-4882-b650-b921adb66d00}";;

  POLICY_GROUP   "Project Rules";
  DESCRIPTION    "";
  ACTIVE         TRUE;
  NOTES          "";
  BEGIN

    RULE                 "Project Supply from Storage";
    DESCRIPTION          "";
    ACTIVE               FALSE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "If date equals April 1, then set A canal Supply<br><br>to look up Project supply multiplier<br>      $ &quot;Lake.DebuggingSlot&quot; [@&quot;t&quot;] := &quot;TableInterpolation&quot;( $ &quot;OpsData.Project Share Calculator&quot;, 0.00000000, 1.00000000, $ &quot;OpsData.OpsIndex&quot; [@&quot;t&quot;], @&quot;t&quot; )<br><br>Next up: work on accounting for Felixble flow account and shadow storage volume<br><br>Shadow storage is volume in lake minus project<br>?????? = ??1??-1 - ????a?? - ??PSA??, (3) where ??1D-1 is UKL storage volume from the previous day, FFAd is the Flexible Flow Account volume, and DPASd is the accumulated deferred Project Supply Account volume. ";
    BEGIN

      IF_STATEMENT (@"t" == @"April 1") THEN
            $ "Lake.A canal Supply" [] := ( $ "Lake.Storage" [] - 209.11100000 "1000 acre-feet" ) * "TableInterpolation"( $ "OpsData.Project Share Calculator", 0.00000000, 1.00000000, $ "OpsData.OpsIndex" [@"t"], @"t" );

      END_IF_STATEMENT;

    END
    UUID "{16428bef-2fe4-4584-ab2a-2f72ba968101}";;

    RULE                 "A canal Diversions";
    DESCRIPTION          "";
    ACTIVE               FALSE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "";
    BEGIN

      IF_STATEMENT ("SpringSummerAgSeason"( @"t" ) == TRUE) THEN
            $ "A Canal.Diversion Request" [] := 250.00000000 "cfs";

      ELSE
            $ "A Canal.Diversion Request" [] := 0.00000000 "cfs";

      END_IF_STATEMENT;

    END
    UUID "{9a68f5d2-1eb9-4305-931f-50154cfccca6}";;

    RULE                 "Diversion Headworks";
    DESCRIPTION          "";
    ACTIVE               FALSE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "";
    BEGIN

      IF_STATEMENT ("SpringSummerAgSeason"( @"t" ) == TRUE) THEN
            $ "Lake.Available for A canal" [] := 1100.00000000 "cfs";

      ELSE
            $ "Lake.Available for A canal" [] := 0.00000000 "cfs";

      END_IF_STATEMENT;

    END
    UUID "{9562ff1c-e274-4a45-b13e-1485bf8655c2}";;

    RULE                 "Diversion Rate - in the works";
    DESCRIPTION          "";
    ACTIVE               FALSE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "Still in progress, is supposed to set the diversion rate based on the overall supply remaining divided by the number of days left. <br>Currently only have the supply calculator function working, need to adjust if they ramp up, it will shorten the overall supply function<br>";
    BEGIN

      $ "Lake.DayCounter" [] := $ "Lake.A canal Supply" [] - "SumFlowsToVolume"( $ "A Canal.Diversion", @"Start Timestep", @"t" );

    END
    UUID "{5f171b4b-05d8-4283-9d57-b11493767021}";;

    RULE                 "LRDC Diversions_ Temp Rule ";
    DESCRIPTION          "";
    ACTIVE               FALSE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "Set to 3000 CFS to test LRDC diversions of Miller hill and station 48. Will revise later";
    BEGIN

      $ "Link River to LRDC.Available For Diversion" [] := 3000.00000000 "cfs";

    END
    UUID "{55273855-d1ca-466b-a399-f9e3eb27110a}";;

    RULE                 "Sta 48 and Miller Hill";
    DESCRIPTION          "";
    ACTIVE               FALSE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "Rule assumes that Miller Hill and Sta 48 consume all water coming from the east side of the project - as modeled in the WRIMS version. After all water coming from the east is consumed, the pumping plants then take water from UKL via the LRDC.<br><br>Inflows - sta 48 & miller hill_from lost = diversion shortage = Diversion request from sta 48 & miller hill_from UKL.<br><br>***not working - completely breaks the model do i manually input diversion request? or can i calculate it another way?";
    BEGIN

      $ "Sta48 and MH from UKL.Diversion Request" [] := IF ( $ "Sta48 and MH from  Lost.Diversion Request" [] - $ "LRDC from Lost River.Available For Diversion" [] <= 0.00000000 "cfs" 0 )
 THEN
  0.00000000 "cfs" 0
 ELSE
  $ "Sta48 and MH from  Lost.Diversion Request" [] - $ "LRDC from Lost River.Available For Diversion" []
 ENDIF;

    END
    UUID "{f47247bc-3c7c-4a68-9c97-e1785633d31d}";;

  END
  UUID "{cc035820-5bf2-4674-af63-80fc3a1a03e9}";;

  POLICY_GROUP   "Various Slot-setting Rules";
  DESCRIPTION    "";
  ACTIVE         TRUE;
  NOTES          "";
  BEGIN

    RULE                 "Ramp down rates";
    DESCRIPTION          "";
    ACTIVE               TRUE;
    RULE_EXEC_CONSTRAINT TRUE;
    NOTES                "Constraining factors when reducing keno flows to reduce the risk of fish stranding. <br>Data found in BiOp appendix E, pg 25<br>";
    BEGIN

      IF_STATEMENT ($ "Keno.Outflow" [] < 1400.00000000 "cfs") THEN
            $ "Keno.Ramp Down Rate" [] := 150.00000000 "cfs";

      ELSE
            $ "Keno.Ramp Down Rate" [] := "Min"( 2000.00000000 "cfs", $ "Keno.Outflow" [@"t" - 1.00000000] - 3100.00000000 "cfs" );

      END_IF_STATEMENT
      ELSEIF_COND ( $ "Keno.Outflow" [] < 2800.00000000 "cfs" )
      ELSEIF_CLAUSE
            $ "Keno.Ramp Down Rate" [] := 300.00000000 "cfs";
      END_ELSEIF
      ELSEIF_COND ( $ "Keno.Outflow" [] < 3100.00000000 "cfs" )
      ELSEIF_CLAUSE
            $ "Keno.Ramp Down Rate" [] := 600.00000000 "cfs";
      END_ELSEIF
      ELSEIF_COND ( $ "Keno.Outflow" [] < 3500.00000000 "cfs" )
      ELSEIF_CLAUSE
            $ "Keno.Ramp Down Rate" [] := $ "Keno.Outflow" [@"t" - 1.00000000] - 2500.00000000 "cfs";
      END_ELSEIF
      ELSEIF_COND ( $ "Keno.Outflow" [] < 4100.00000000 "cfs" )
      ELSEIF_CLAUSE
            $ "Keno.Ramp Down Rate" [] := 1000.00000000 "cfs";
      END_ELSEIF;

    END
    UUID "{7687baa0-5926-4b02-b53b-75d76bedb72a}";;

  END
  UUID "{8ab36297-ef68-4634-a66b-9829ed916b0c}";;

  UTILITY_GROUP "Index and counters Group";
  DESCRIPTION   "";
  ACTIVE        TRUE;
  NOTES          "";
  BEGIN

    FUNCTION       "Flood Season" (  )
    RETURN_TYPE    BOOLEAN;
    SCALE_UNITS    "";
    DESCRIPTION    "Sets Period of time when flood control is operation";
    ACTIVE         TRUE;
    PRE_EXEC_DIAG  FALSE;
    POST_EXEC_DIAG FALSE;
    NOTES          "";
    BEGIN

      @"t" > @"November 15" AND @"t" < @"June 15";

    END
    UUID "{ee714ead-5671-4fca-a613-86572cff92f4}";;

    FUNCTION       "KenoReleaseMultiplier" (  )
    RETURN_TYPE    NUMERIC;
    SCALE_UNITS    "";
    DESCRIPTION    "";
    ACTIVE         TRUE;
    PRE_EXEC_DIAG  FALSE;
    POST_EXEC_DIAG FALSE;
    NOTES          "Formula only calculates the Keno release multiplier (KRmult) for the current timestep (@&quot;t&quot;).  It does this by interpolating the Keno releast multiplier table in the OpsData data object. <br><br>Keno Release multiplier table is found in Appendix E, pg 23";
    BEGIN

      "TableInterpolation"( $ "Keno.Keno Release Multiplier", 0.00000000, "GetMonth"( @"t" ), $ "OpsData.OpsIndex" [], @"t" );

    END
    UUID "{161680cc-61d7-4a86-9039-663ff8f74beb}";;

    FUNCTION       "SpringSummerAgSeason" ( DATETIME CurrentDate )
    RETURN_TYPE    BOOLEAN;
    SCALE_UNITS    "";
    DESCRIPTION    "";
    ACTIVE         TRUE;
    PRE_EXEC_DIAG  FALSE;
    POST_EXEC_DIAG FALSE;
    NOTES          "";
    BEGIN

      CurrentDate >= @"24:00:00 April 1, Current Year" AND CurrentDate <= @"24:00:00 November 30, Current Year";

    END
    UUID "{85d33bcc-3562-431d-a68c-5bcb12ea61f5}";;

    FUNCTION       "Date Counter" ( DATETIME date1, DATETIME date2 )
    RETURN_TYPE    NUMERIC;
    SCALE_UNITS    "";
    DESCRIPTION    "Counts the number of days between two dates. Date 1 is the first date, date 2 is the second date ( after).";
    ACTIVE         TRUE;
    PRE_EXEC_DIAG  FALSE;
    POST_EXEC_DIAG FALSE;
    NOTES          "Due to RPL language, the values come out as negative, so the abs function is required. Also, riverware count the difference in seconds, thus the divided by 86400 (# of seconds in a day)";
    BEGIN

      "Abs"( "DateToNumber"( date1 ) - "DateToNumber"( date2 ) ) / 86400.00000000;

    END
    UUID "{0d2712c5-a1c9-4f20-a26d-2e942c5e5ee9}";;

  END
  UUID "{0c598bdb-7b19-4f9f-ba96-083092a449d3}";;

  UTILITY_GROUP "Flexible Flow Account";
  DESCRIPTION   "";
  ACTIVE        TRUE;
  NOTES          "";
  BEGIN

    FUNCTION       "FFA reserve Lookup" (  )
    RETURN_TYPE    NUMERIC;
    SCALE_UNITS    "";
    DESCRIPTION    "";
    ACTIVE         TRUE;
    PRE_EXEC_DIAG  FALSE;
    POST_EXEC_DIAG FALSE;
    NOTES          "Looks up the the FFA reserve volume from the table, based on Ops index value.  FFA reserve table is <br>";
    BEGIN

      "TableInterpolation"( $ "OpsData.FFA Reserve table", 0.00000000, 1.00000000, $ "OpsData.OpsIndex" [], @"t" );

    END
    UUID "{e6941377-4e46-4ad4-b532-3524770a872d}";;

    FUNCTION       "FFA increment" (  )
    RETURN_TYPE    NUMERIC;
    SCALE_UNITS    "";
    DESCRIPTION    "";
    ACTIVE         TRUE;
    PRE_EXEC_DIAG  FALSE;
    POST_EXEC_DIAG FALSE;
    NOTES          "Calculates FFA daily increment based on ops index. <br>Formula #6 from Appendix E (pg 22).";
    BEGIN

      $ "Keno.Baseflow" [] * "KenoReleaseMultiplier"(  ) * "FFA reserve Lookup"(  );

    END
    UUID "{fb4a8d5b-8dbf-4f49-8975-78e878216430}";;

    FUNCTION       "Yesterday's FFA Saving" (  )
    RETURN_TYPE    NUMERIC;
    SCALE_UNITS    "";
    DESCRIPTION    "";
    ACTIVE         TRUE;
    PRE_EXEC_DIAG  FALSE;
    POST_EXEC_DIAG FALSE;
    NOTES          "calculates savings for FFA account<br>formula 7 from appendix C, (page C-22)<br>Formula variables are as follows:<br><br>River Data.FFA increment<br>Keno.spill =  flood spills over Keno<br>LRDC to Link.Return Flow = LRDC inflows into Keno<br>0.00=temp placeholder for Deferred project supply spill (yet to be programmed)<br>Keno.Flow from pumped storage = F/FF contributions from KDD<br><br>";
    BEGIN

      "Max"( 0.00000000, $ "River Data.FFA Increment" [@"t - 1"] - "Max"( 0.00000000, $ "Keno.Spill" [@"t - 1"] - ( $ "LRDC to Link.Return Flow" [@"t - 1"] - ( 0.00000000 - ( $ "Keno.Flow FROM Pumped Storage" [@"t - 1"] - $ "Keno.Ramp Down Rate" [@"t - 1"] ) ) ) ) );

    END
    UUID "{70fd077d-af11-4f0e-8dc0-59345ed4752f}";;

  END
  UUID "{06b0d2fa-3379-45be-8bab-80c5bfac6218}";;

END
UUID "{23cc8ac1-5fb5-4ddb-b5b6-bd51632eb9d2}";
